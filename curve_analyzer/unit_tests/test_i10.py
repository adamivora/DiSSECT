import ast
import unittest

from curve_analyzer.traits.example_curves import curve_names
from curve_analyzer.traits.i10.i10 import i10_curve_function

results = {'secp112r2': {"{'multiple': 2, 'formula_file': 'shortw/projective/addition/add-1998-cmo.op3'}": {
    'points': [[0, 383296273550222982847666203456013], [3610075134545239076002374364665933, 0],
               [4159582224672948383679261762056683, 2814392144387085746068211906712334],
               [477385670508437829362683123244101, 730168561475395949236536954568441],
               [3610075134545239076002374364665932, 964432197919735907550954472026594],
               [3490426733362996282381221682434724, 857476884809506963982152529665944]], 'len': 6}}, 'bn158': {
    "{'multiple': 2, 'formula_file': 'shortw/projective/addition/add-1998-cmo.op3'}": {
        'points': [[197365096272761189180916856350650853164048453949, 3193749963018467503822332301255897023155604465],
                   [144232476870848113222219965746662256387438589117, 3193749963018467503822332301255897023155604465],
                   [71057769577865302578894779390964957349695011372, 3193749963018467503822332301255897023155604465]],
        'len': 3}}, 'brainpoolP160r1': {
    "{'multiple': 2, 'formula_file': 'shortw/projective/addition/add-1998-cmo.op3'}": {
        'points': [[696755845437195843599939013205699980408716152433, 839827601121512707764030778312813146231476135309],
                   [117764972768661695560743921822038428802344750232,
                    265502462790670151082118111395716361050588074452]], 'len': 2}}}


class TestI10(unittest.TestCase):

    def test_auto_generated_secp112r2(self):
        '''This test has been auto-generated by gen_unittest'''
        params = ast.literal_eval(list(results["secp112r2"].keys())[0]).values()
        computed_result = i10_curve_function(curve_names["secp112r2"], *params)
        self.assertEqual(computed_result, list(results["secp112r2"].values())[0])

    def test_auto_generated_bn158(self):
        '''This test has been auto-generated by gen_unittest'''
        params = ast.literal_eval(list(results["bn158"].keys())[0]).values()
        computed_result = i10_curve_function(curve_names["bn158"], *params)
        self.assertEqual(computed_result, list(results["bn158"].values())[0])

    def test_auto_generated_brainpoolP160r1(self):
        '''This test has been auto-generated by gen_unittest'''
        params = ast.literal_eval(list(results["brainpoolP160r1"].keys())[0]).values()
        computed_result = i10_curve_function(curve_names["brainpoolP160r1"], *params)
        self.assertEqual(computed_result, list(results["brainpoolP160r1"].values())[0])


if __name__ == '__main__':
    unittest.main()
    print("Everything passed")
